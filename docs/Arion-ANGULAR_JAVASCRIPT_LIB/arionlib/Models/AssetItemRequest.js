/**
 * ArionLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of AssetItemRequest
 *
 * @constructor
 */
angular.module('ArionLib')
    .factory('AssetItemRequest', ['BaseModel', AssetItemRequestModel]);

    function AssetItemRequestModel(BaseModel) {
        var AssetItemRequest = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.assetItemID = this.getValue(obj.assetItemID);
            this.assetID = this.getValue(obj.assetID);
            this.ownerID = this.getValue(obj.ownerID);
            this.stepID = this.getValue(obj.stepID);
            this.deliveryDate = this.getValue(obj.deliveryDate);
            this.orderPrice = this.getValue(obj.orderPrice);
            this.shippingPrice = this.getValue(obj.shippingPrice);
            this.status = this.getValue(obj.status);
            this.quantity = this.getValue(obj.quantity);
            this.aditionalInfoMap = this.getValue(obj.aditionalInfoMap);
        };

        AssetItemRequest.prototype = new BaseModel();
        AssetItemRequest.prototype.constructor = AssetItemRequest;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        AssetItemRequest.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'assetItemID', realName: 'assetItemID' },
                { name: 'assetID', realName: 'assetID' },
                { name: 'ownerID', realName: 'ownerID' },
                { name: 'stepID', realName: 'stepID' },
                { name: 'deliveryDate', realName: 'deliveryDate' },
                { name: 'orderPrice', realName: 'orderPrice' },
                { name: 'shippingPrice', realName: 'shippingPrice' },
                { name: 'status', realName: 'status' },
                { name: 'quantity', realName: 'quantity' },
                { name: 'aditionalInfoMap', realName: 'aditionalInfoMap' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        AssetItemRequest.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getAssetItemID = function () {
            return this.assetItemID;
        };
    
        /**
         * Setter for AssetItemID
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setAssetItemID = function (value) {
            this.assetItemID = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getAssetID = function () {
            return this.assetID;
        };
    
        /**
         * Setter for AssetID
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setAssetID = function (value) {
            this.assetID = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getOwnerID = function () {
            return this.ownerID;
        };
    
        /**
         * Setter for OwnerID
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setOwnerID = function (value) {
            this.ownerID = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getStepID = function () {
            return this.stepID;
        };
    
        /**
         * Setter for StepID
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setStepID = function (value) {
            this.stepID = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getDeliveryDate = function () {
            return this.deliveryDate;
        };
    
        /**
         * Setter for DeliveryDate
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setDeliveryDate = function (value) {
            this.deliveryDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getOrderPrice = function () {
            return this.orderPrice;
        };
    
        /**
         * Setter for OrderPrice
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setOrderPrice = function (value) {
            this.orderPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getShippingPrice = function () {
            return this.shippingPrice;
        };
    
        /**
         * Setter for ShippingPrice
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setShippingPrice = function (value) {
            this.shippingPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getStatus = function () {
            return this.status;
        };
    
        /**
         * Setter for Status
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setStatus = function (value) {
            this.status = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getQuantity = function () {
            return this.quantity;
        };
    
        /**
         * Setter for Quantity
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setQuantity = function (value) {
            this.quantity = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        AssetItemRequest.prototype.getAditionalInfoMap = function () {
            return this.aditionalInfoMap;
        };
    
        /**
         * Setter for AditionalInfoMap
         * 
         * @param {string} value 
         */
        AssetItemRequest.prototype.setAditionalInfoMap = function (value) {
            this.aditionalInfoMap = value;
        };
    
        return AssetItemRequest;
    }

}(angular));
